<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http auto-config="true" use-expressions="true" >
		<!-- access-decision-manager-ref="unanimousBased"> -->
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**/*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/secure/**/*" access="hasRole('ROLE_MANAGER') and fullyAuthenticated" />
		<form-login login-page="/login" />
		<remember-me key="smartfactory" token-validity-seconds="3600" />
		<logout invalidate-session="true" success-handler-ref="myLogoutSuccessHandler"
			logout-url="/logout" />
	</http>

	<beans:bean class="org.springframework.security.access.vote.UnanimousBased"
		id="unanimousBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref bean="roleVoter" />
				<beans:ref bean="authenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean class="org.springframework.security.access.vote.RoleVoter"
		id="roleVoter" />
	<beans:bean
		class="org.springframework.security.access.vote.AuthenticatedVoter"
		id="authenticatedVoter" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user authorities="ROLE_USER" name="guest" password="guest" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="myLogoutSuccessHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
	</beans:bean>

</beans:beans>
