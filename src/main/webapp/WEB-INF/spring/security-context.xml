<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**/*.css" access="permitAll" />
		<intercept-url pattern="/**/image/*.*" access="permitAll" />
		<intercept-url pattern="/**/*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/secure/**/*"
			access="hasRole('ROLE_MANAGER') and fullyAuthenticated" />
		<form-login login-page="/login" />
		<logout invalidate-session="true" success-handler-ref="myLogoutSuccessHandler"
			logout-url="/logout" />
	</http>

	<beans:bean class="com.mesplus.SEC.service.CustomPasswordEncoder" id="passwordEncoder" />
	<beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>
	
	<beans:bean id="jdbcUserService" class="com.mesplus.SEC.dao.CustomJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
			SELECT USER_ID, ENCODE_PASSWORD, 1 FROM MSECUSREXT WHERE FACTORY='DEMO' AND USER_ID = ?
			</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>
			SELECT USER_ID, 'ROLE_USER' FROM MSECUSREXT WHERE FACTORY='DEMO' AND USER_ID = ?
			</beans:value>
		</beans:property>
	</beans:bean>
	
	<authentication-manager>
		<authentication-provider user-service-ref="jdbcUserService">
			<password-encoder ref="passwordEncoder" >
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean class="org.springframework.security.access.vote.UnanimousBased"
		id="unanimousBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref bean="roleVoter" />
				<beans:ref bean="authenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.security.access.vote.RoleVoter" id="roleVoter" />
	<beans:bean	class="org.springframework.security.access.vote.AuthenticatedVoter" id="authenticatedVoter" />

	<beans:bean id="myLogoutSuccessHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
	</beans:bean>
 </beans:beans>
